// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: deployer.proto

package deployer_pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContactType int32

const (
	ContactType_ERC20        ContactType = 0
	ContactType_CAT          ContactType = 1
	ContactType_CAT_MINTER   ContactType = 2
	ContactType_CAT_UPGRADER ContactType = 3
)

// Enum value maps for ContactType.
var (
	ContactType_name = map[int32]string{
		0: "ERC20",
		1: "CAT",
		2: "CAT_MINTER",
		3: "CAT_UPGRADER",
	}
	ContactType_value = map[string]int32{
		"ERC20":        0,
		"CAT":          1,
		"CAT_MINTER":   2,
		"CAT_UPGRADER": 3,
	}
)

func (x ContactType) Enum() *ContactType {
	p := new(ContactType)
	*p = x
	return p
}

func (x ContactType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactType) Descriptor() protoreflect.EnumDescriptor {
	return file_deployer_proto_enumTypes[0].Descriptor()
}

func (ContactType) Type() protoreflect.EnumType {
	return &file_deployer_proto_enumTypes[0]
}

func (x ContactType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactType.Descriptor instead.
func (ContactType) EnumDescriptor() ([]byte, []int) {
	return file_deployer_proto_rawDescGZIP(), []int{0}
}

type DeployCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//cat information
	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction,proto3" json:"introduction,omitempty"`
	App          string `protobuf:"bytes,4,opt,name=app,proto3" json:"app,omitempty"`
	//max level is 5
	MaxLevel    int32            `protobuf:"varint,5,opt,name=max_level,json=maxLevel,proto3" json:"max_level,omitempty"`
	LevelImgs   map[int32]string `protobuf:"bytes,6,rep,name=level_imgs,json=levelImgs,proto3" json:"level_imgs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CanTransfer bool             `protobuf:"varint,7,opt,name=can_transfer,json=canTransfer,proto3" json:"can_transfer,omitempty"`
	// unlimited when negative or zero
	MaxSupply int64 `protobuf:"varint,8,opt,name=max_supply,json=maxSupply,proto3" json:"max_supply,omitempty"`
	//mint information
	MintPrices []*Price `protobuf:"bytes,10,rep,name=mint_prices,json=mintPrices,proto3" json:"mint_prices,omitempty"`
	//upgrade information
	UpgradePrices map[int32]*MultiPrices `protobuf:"bytes,21,rep,name=upgrade_prices,json=upgradePrices,proto3" json:"upgrade_prices,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChainType     int32                  `protobuf:"varint,31,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty"`
	Owner         string                 `protobuf:"bytes,32,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *DeployCatReq) Reset() {
	*x = DeployCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployCatReq) ProtoMessage() {}

func (x *DeployCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_deployer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployCatReq.ProtoReflect.Descriptor instead.
func (*DeployCatReq) Descriptor() ([]byte, []int) {
	return file_deployer_proto_rawDescGZIP(), []int{0}
}

func (x *DeployCatReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeployCatReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DeployCatReq) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *DeployCatReq) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *DeployCatReq) GetMaxLevel() int32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *DeployCatReq) GetLevelImgs() map[int32]string {
	if x != nil {
		return x.LevelImgs
	}
	return nil
}

func (x *DeployCatReq) GetCanTransfer() bool {
	if x != nil {
		return x.CanTransfer
	}
	return false
}

func (x *DeployCatReq) GetMaxSupply() int64 {
	if x != nil {
		return x.MaxSupply
	}
	return 0
}

func (x *DeployCatReq) GetMintPrices() []*Price {
	if x != nil {
		return x.MintPrices
	}
	return nil
}

func (x *DeployCatReq) GetUpgradePrices() map[int32]*MultiPrices {
	if x != nil {
		return x.UpgradePrices
	}
	return nil
}

func (x *DeployCatReq) GetChainType() int32 {
	if x != nil {
		return x.ChainType
	}
	return 0
}

func (x *DeployCatReq) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEth   bool   `protobuf:"varint,1,opt,name=is_eth,json=isEth,proto3" json:"is_eth,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	//free when negative or zero
	Price int64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_deployer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_deployer_proto_rawDescGZIP(), []int{1}
}

func (x *Price) GetIsEth() bool {
	if x != nil {
		return x.IsEth
	}
	return false
}

func (x *Price) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Price) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type MultiPrices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultiPrice []*Price `protobuf:"bytes,1,rep,name=multiPrice,proto3" json:"multiPrice,omitempty"`
}

func (x *MultiPrices) Reset() {
	*x = MultiPrices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiPrices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiPrices) ProtoMessage() {}

func (x *MultiPrices) ProtoReflect() protoreflect.Message {
	mi := &file_deployer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiPrices.ProtoReflect.Descriptor instead.
func (*MultiPrices) Descriptor() ([]byte, []int) {
	return file_deployer_proto_rawDescGZIP(), []int{2}
}

func (x *MultiPrices) GetMultiPrice() []*Price {
	if x != nil {
		return x.MultiPrice
	}
	return nil
}

type DeployResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DeployData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeployResp) Reset() {
	*x = DeployResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployResp) ProtoMessage() {}

func (x *DeployResp) ProtoReflect() protoreflect.Message {
	mi := &file_deployer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployResp.ProtoReflect.Descriptor instead.
func (*DeployResp) Descriptor() ([]byte, []int) {
	return file_deployer_proto_rawDescGZIP(), []int{3}
}

func (x *DeployResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeployResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeployResp) GetData() *DeployData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeployData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contracts map[string]string `protobuf:"bytes,1,rep,name=contracts,proto3" json:"contracts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChainType int32             `protobuf:"varint,2,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty"`
}

func (x *DeployData) Reset() {
	*x = DeployData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deployer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployData) ProtoMessage() {}

func (x *DeployData) ProtoReflect() protoreflect.Message {
	mi := &file_deployer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployData.ProtoReflect.Descriptor instead.
func (*DeployData) Descriptor() ([]byte, []int) {
	return file_deployer_proto_rawDescGZIP(), []int{4}
}

func (x *DeployData) GetContracts() map[string]string {
	if x != nil {
		return x.Contracts
	}
	return nil
}

func (x *DeployData) GetChainType() int32 {
	if x != nil {
		return x.ChainType
	}
	return 0
}

var File_deployer_proto protoreflect.FileDescriptor

var file_deployer_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0xcd, 0x04, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6d,
	0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x6d, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x6d, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x1a, 0x3c, 0x0a, 0x0e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x51, 0x0a, 0x12, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x65, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x45, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x38, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x5e,
	0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa6,
	0x01, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x43, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x43, 0x32, 0x30, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41,
	0x54, 0x5f, 0x4d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41,
	0x54, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x52, 0x10, 0x03, 0x32, 0x40, 0x0a, 0x0f,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2d, 0x0a, 0x09, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x61, 0x74, 0x12, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x42, 0x1a,
	0x5a, 0x18, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2f, 0x3b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_deployer_proto_rawDescOnce sync.Once
	file_deployer_proto_rawDescData = file_deployer_proto_rawDesc
)

func file_deployer_proto_rawDescGZIP() []byte {
	file_deployer_proto_rawDescOnce.Do(func() {
		file_deployer_proto_rawDescData = protoimpl.X.CompressGZIP(file_deployer_proto_rawDescData)
	})
	return file_deployer_proto_rawDescData
}

var file_deployer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_deployer_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_deployer_proto_goTypes = []interface{}{
	(ContactType)(0),     // 0: pb.ContactType
	(*DeployCatReq)(nil), // 1: pb.DeployCatReq
	(*Price)(nil),        // 2: pb.Price
	(*MultiPrices)(nil),  // 3: pb.MultiPrices
	(*DeployResp)(nil),   // 4: pb.DeployResp
	(*DeployData)(nil),   // 5: pb.DeployData
	nil,                  // 6: pb.DeployCatReq.LevelImgsEntry
	nil,                  // 7: pb.DeployCatReq.UpgradePricesEntry
	nil,                  // 8: pb.DeployData.ContractsEntry
}
var file_deployer_proto_depIdxs = []int32{
	6, // 0: pb.DeployCatReq.level_imgs:type_name -> pb.DeployCatReq.LevelImgsEntry
	2, // 1: pb.DeployCatReq.mint_prices:type_name -> pb.Price
	7, // 2: pb.DeployCatReq.upgrade_prices:type_name -> pb.DeployCatReq.UpgradePricesEntry
	2, // 3: pb.MultiPrices.multiPrice:type_name -> pb.Price
	5, // 4: pb.DeployResp.data:type_name -> pb.DeployData
	8, // 5: pb.DeployData.contracts:type_name -> pb.DeployData.ContractsEntry
	3, // 6: pb.DeployCatReq.UpgradePricesEntry.value:type_name -> pb.MultiPrices
	1, // 7: pb.DeployerService.DeployCat:input_type -> pb.DeployCatReq
	4, // 8: pb.DeployerService.DeployCat:output_type -> pb.DeployResp
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_deployer_proto_init() }
func file_deployer_proto_init() {
	if File_deployer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deployer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiPrices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deployer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deployer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deployer_proto_goTypes,
		DependencyIndexes: file_deployer_proto_depIdxs,
		EnumInfos:         file_deployer_proto_enumTypes,
		MessageInfos:      file_deployer_proto_msgTypes,
	}.Build()
	File_deployer_proto = out.File
	file_deployer_proto_rawDesc = nil
	file_deployer_proto_goTypes = nil
	file_deployer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeployerServiceClient is the client API for DeployerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeployerServiceClient interface {
	DeployCat(ctx context.Context, in *DeployCatReq, opts ...grpc.CallOption) (*DeployResp, error)
}

type deployerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeployerServiceClient(cc grpc.ClientConnInterface) DeployerServiceClient {
	return &deployerServiceClient{cc}
}

func (c *deployerServiceClient) DeployCat(ctx context.Context, in *DeployCatReq, opts ...grpc.CallOption) (*DeployResp, error) {
	out := new(DeployResp)
	err := c.cc.Invoke(ctx, "/pb.DeployerService/DeployCat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeployerServiceServer is the server API for DeployerService service.
type DeployerServiceServer interface {
	DeployCat(context.Context, *DeployCatReq) (*DeployResp, error)
}

// UnimplementedDeployerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeployerServiceServer struct {
}

func (*UnimplementedDeployerServiceServer) DeployCat(context.Context, *DeployCatReq) (*DeployResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployCat not implemented")
}

func RegisterDeployerServiceServer(s *grpc.Server, srv DeployerServiceServer) {
	s.RegisterService(&_DeployerService_serviceDesc, srv)
}

func _DeployerService_DeployCat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployCatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployerServiceServer).DeployCat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DeployerService/DeployCat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployerServiceServer).DeployCat(ctx, req.(*DeployCatReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeployerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DeployerService",
	HandlerType: (*DeployerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeployCat",
			Handler:    _DeployerService_DeployCat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deployer.proto",
}
